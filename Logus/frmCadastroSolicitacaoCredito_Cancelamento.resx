<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=2.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="$this.Icon" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        AAABAAEAICAAAAAAAACoCAAAFgAAACgAAAAgAAAAQAAAAAEACAAAAAAAgAQAAAAAAAAAAAAAAAEAAAAA
        AAD8/f4A/f71APz1/wD0+/8A8f72APP1/wD39fQA8uv/APHl/wDt+/4A6/L/AOTy/wDm/f8A7O3/AOrm
        /wDk6v8A4uT/ANvz/wDd+f8A2+v/ANzk/wDX7v8A0tz/ANTT/ADI1/8Awsr/AMnO/wDj3v8Av9T/ALrV
        /wC7zf8AusT/ALPJ/wC1wv8ArMP/AKvM/wC0vv8ArLn3AKS6/wChtf8Arbr/AKOv/wCbsf8AlK3/AJKl
        /wCcqv8Ajqv8AI2k/wCCov8AgZX/AIWO/wB9o/8Afaj/AH2Z/wB2kf4Ae5b/AHKC9AB2ivwAbZb6AGOF
        /gBmifwAcYPuAFyC8gBne/sAZnjoAHR/7wBqeMUAbXTNAFN1/wBXePgAVW3yAFNi5ABYae0ARnX7AEJk
        /QBHaPQAQWzpAEJh6QBGYscAV2naAElc5wBRXd0AVlnOAExe0gBIV9EAQFjJAEVOzQBpcrYAa22yAGFq
        tgBlba0AYWunAFNutABIXb0AR1KhADhn/wA0WfgAKVb1ACdV6AAmTP4AJETzAChK5wA0WesAPVXaADtM
        2wAzRNUAKFXdACRDzAApSMYANk3QABZB+wARRO0AGEPmAAtE6QAbUusAFETYABtDxQAdQcoADkHXADVO
        uwAqS7QAJEKxAChCuQAvWrcANEKVAC5ClQAgQZ4ALDrDACI7ywAkOcoALDvSABQ58QAUOPgAEjvqABM2
        7gASM+YAFjroAAw6/AAKOvMADDP8AAo19QAEOPsAAjnzAAI1+wACM/QADDrrAAo75AAJNO4ACjPiAAQ5
        6gACOuYAAjTsAAQy4QAEK/QABCv4AAgv7AAcO9sAGjbVABM83gASNNMAFjjYABs7zgAfOcMAGTLEABM6
        zAATOsMAFDPNABQ0xAAcMcgAFS7HAAw63QAMMdoADDPRAAU63QADNd0ABTPSAAg51gAKOMsACzrEAAwz
        ywAMMsMABjrKAAQ5xAACM8oABDTDAA0v2gAMLdEAAi7dAAwuygALLcQAAy3EAAAnwwAmN+EAJD26ACc1
        rQAyPZUAOjqUABo6vAAZNboAFTq3ABMzuwATM7QAFje2AB08rgAcO6YAEjWsAB8xrAATLbsAFC2zABYo
        uAAUKKgACjm9AAwzvQABOb0AAjK8AAo4tQAMLrwAASu9AAIkvQAMJqMACCqpABUkiAANJJsACyWUAAsp
        nwAMII8ADB2kAAETowAGF6kAAA6sAAAAoAAAA6kAEhuYABQdhAAaHocACh6VAAMamwAFFpYADB2HAAIb
        jAAEFIkAAAGbAAAClQAAC4MAQT+jABUjewANIXcAAhR9AAoYdQANFGoAChZoAAAMdAAAA38ADRZvAAAA
        AAD///8A/v7+/v7+/v7+/v7+Un/k8vLswVP+/v7+/v7+/v7+/v7+/v7+/v7+/v5a+ene0tGjqM/c7O75
        WP7+/v7+/v7+/v7+/v7+/v5X++vGyci0p7S0p7TUycnr+0L+/v7+/v7+/v7+/v7+fOHQp7S4s7HW1r6/
        s7O41rTP68P+/v7+/v7+/v7+/vbvyMil1tbZuLi1rLqp2tbVstmn7N3+/v7+/v7+/v714Kemp9S4t6yz
        uNa+s6amstXWs6yp2/b+/v7+/v7+w9KnnLqfrKy/vL2y1tSnz6fWuLizvp/I3nz+/v7+/kPtoa+rubm6
        vKamvLS009Snp9TUtLS8s7TI70L+/v7+86avrZi7q6bFbKO9t7e4ttTJy8vGp7S01tbI9/7+/ljjkpau
        mJivdCsmU8a4uLbWx3cnJnrJ1LLWtrTsV/7++KSWlpaXrrI0EQsWXce1vrLMIQ8KInnUuNa2t9D5/v7h
        oJeOkJCWtjoSCQoWXc3HeCgKBQ8izNS0s7i/2N3+U+RwipmLjJOudC4LAwUYWV4lBQMLHXfHp9i9s7PU
        306AvYVui4uZjIqsei4KBQUQFwUFAx5+3NTIp6a8s7TJweOdZG6Li4yQkI67aywQAwMAAwUkeNO1uLS0
        tL2zp8/j52VkY26PkImPkI+rwiQFAAEAF17HuLe3tLS0uLi9qPHnnGBfY4yMkI+NkKB3GgIAAAAbWc21
        t7e02Li2uLSj8eWhSkVgg4SPj46qaSgKAwADAAUWTtext7OzsdbWpdHjgKJNPERkhIuQkmweAgIRHSUL
        CQkYXMmfrLyzuLTY0X9U0kg2PEqDjIpiIA8CBSN7eSwLCQkdVae8rLPZs6PoUv7qUTkvO2VxqjMTAwUZ
        a56qdSsTCgsdxbOvt7i4yen+/vpWPysuSXN2OxULH22Ij42UoicTEy/Is7C3uLfG+f7+WuJLLCYzTHJz
        OzBgh5CPmYmHnTY3oZ+rr7e1rOxa/v7+82g4KiI1TGpznpuaj4+NmYuDn7OIlJSUsLe08P7+/v5D6Ecx
        JB8vPmpwhouPj4+PjJGtrZWXk7uupPBD/v7+/v7EwlEtHyEqPEtlZIWRlYqRb3FxlZeblLPgff7+/v7+
        /v71ekgyHxkiLjZFTWZmYWFgYXJvb4acyfb+/v7+/v7+/v74zkdBKR4gIicvNTo8O0RJX2OHwOL1/v7+
        /v7+/v7+/v5932dGOSwtJicmKjA5P0pjZMDt9P7+/v7+/v7+/v7+/v5C995VT0BAOT04OEZNZYDi/EP+
        /v7+/v7+/v7+/v7+/v7+W/3pwn9oZ2hpotvu+lf+/v7+/v7+/v7+/v7+/v7+/v7+/v5QgeXn8eSiTv7+
        /v7+/v7+/v7+/v/wD///gAH//gAAf/wAAD/4AAAf8AAAD+AAAAfAAAADwAAAA4AAAAGAAAABgAAAAQAA
        AAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAAgAAAAYAAAAGAAAABwAAAA8AAAAPgAAAH8AAAD/gA
        AB/8AAA//gAAf/+AAf//8A//
</value>
  </data>
</root>